<?php

/**
 * @file
 * Handles installing and uninstalling Paystation.
 */

/**
 * Implementation of hook_requirements().
 */
function uc_paystation_cc_requirements($phase) {
  $t = get_t();

  $has_curl = function_exists('curl_init');

  $requirements['uc_paystation_cc_curl'] = array(
    'title' => $t('cURL'),
    'value' => $has_curl ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_curl) {
    $requirements['uc_paystation_cc_curl']['severity'] = REQUIREMENT_ERROR;
    $requirements['uc_paystation_cc_curl']['description'] = $t("Paystation requires the PHP <a href='!curl_url'>cURL</a> library.", array('!curl_url' => 'http://php.net/manual/en/curl.setup.php'));
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function uc_paystation_cc_install() {
  $t = get_t();

  db_merge('uc_order_statuses')
    ->key(array('order_status_id' => 'paystation_payment_unsuccessful'))
    ->insertFields(array(
      'order_status_id' => 'paystation_payment_unsuccessful',
      'title' => $t('Paystation payment unsuccessful'),
      'state' => 'post_checkout',
      'weight' => 7,
      'locked' => 1,
    ))
    ->updateFields(array(
      'state' => 'post_checkout',
      'locked' => 1,
    ))
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function uc_paystation_cc_uninstall() {
  db_update('uc_order_statuses')
    ->fields(array(
      'locked' => 0,
    ))
    ->condition('order_status_id', 'paystation_payment_unsuccessful')
    ->execute();

  db_delete('variable')
    ->condition('name', 'uc_paystation_cc%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_update_last_removed().
 */
function uc_paystation_cc_update_last_removed() {
  // 7.x-3.0-beta2 and earlier were installed with schema version 0,
  return drupal_get_installed_schema_version('uc_paystation_cc') == 0 ? 0 : 6000;
}

/**
 * Fix incorrect order status configuration.
 */
function uc_paystation_cc_update_7001() {
  db_delete('uc_order_statuses')
    ->condition('order_status_id', '')
    ->execute();

  db_merge('uc_order_statuses')
    ->key(array('order_status_id' => 'paystation_payment_unsuccessful'))
    ->insertFields(array(
      'order_status_id' => 'paystation_payment_unsuccessful',
      'title' => t('Paystation payment unsuccessful'),
      'state' => 'payment_received',
      'weight' => 7,
      'locked' => 1,
    ))
    ->updateFields(array(
      'state' => 'payment_received',
      'locked' => 1,
    ))
    ->execute();
}

/**
 * Fix incorrect order state configuration.
 */
function uc_paystation_cc_update_7300() {
  db_update('uc_order_statuses')
    ->fields(array(
      'state' => 'post_checkout',
    ))
    ->condition('order_status_id', 'paystation_payment_unsuccessful')
    ->execute();
}
